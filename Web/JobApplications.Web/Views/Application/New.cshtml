@using System.Threading
@using JobApplications.Web.Models.Applications
@model ApplicationNewViewModel
@{
    ViewBag.Title = "New";
}

@section Styles {
    @*@Styles.Render("~/Content/jquery-ui")*@

    <link rel="stylesheet" href="/Content/themes/base/all.css" />
    <link rel="stylesheet" href="/Content/themes/blitzer/jquery-ui.blitzer.css" />
}


<h1>New application</h1>
<br />

@using (Html.BeginForm("New", "Application", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(m => m.Position, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Position, new { @class = "form-control", placeholder = "Position" })
            @Html.ValidationMessageFor(m => m.Position, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Description, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(m => m.Description, new { @class = "form-control", rows = "10", placeholder = "Description" })
            @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Company, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Company, new { @class = "form-control", placeholder = "Company" })
            @Html.ValidationMessageFor(m => m.Company, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.RefNo, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.RefNo, new { @class = "form-control", placeholder = "Ref. No" })
            @Html.ValidationMessageFor(m => m.RefNo, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.OfferUrl, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.OfferUrl, new { @class = "form-control", placeholder = "Offer url" })
            @Html.ValidationMessageFor(m => m.OfferUrl, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.CompanyUrl, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.CompanyUrl, new { @class = "form-control", placeholder = "Company web site" })
            @Html.ValidationMessageFor(m => m.CompanyUrl, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Contacts, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Contacts, new { @class = "form-control", placeholder = "Contacts" })
            @Html.ValidationMessageFor(m => m.Contacts, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.OfferDate, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.OfferDate, new { id = "tbxOfferDate", @class = "form-control", placeholder = "Offer date" })
            @Html.ValidationMessageFor(m => m.OfferDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Notes, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(m => m.Notes, new { @class = "form-control", rows = "5", placeholder = "Notes" })
            @Html.ValidationMessageFor(m => m.Notes, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10 col-md-offset-2">
            <input type="submit" class="btn btn-primary" value="Add" title="Add" />
            @Html.ActionLink("Cancel", "Index", "Application", null, new { @class = "btn btn-success", title = "Cancel" })
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery-ui")
    @Scripts.Render("~/bundles/moment");

    <script>
        function getLongDateFormat() {
            var locale = moment.localeData("@Thread.CurrentThread.CurrentCulture.Name"),
                format;

            if (!locale) {
                locale = moment.localeData("en");
            }

            format = locale.longDateFormat("LL");
            return format;
        }

        $("#tbxOfferDate").datepicker({
            firstDay: 1,
            showWeek: true,
            beforeShow: function (input, inst) {
                var text = $(input).val().trim(),
                    result = {};

                if (text) {
                    result.defaultDate = moment(text, getLongDateFormat()).format("MM/DD/YYYY");
                }

                return result;
            },
            onSelect: function (dateText, inst) {
                var date = moment(dateText, "MM/DD/YYYY");

                $(this).val(date.format(getLongDateFormat()));
            },
            submitHandler: function(form) {
                var offerDate = $("#tbxOfferDate"),
                    date = offerDate.val();

                if (date) {
                    date = moment(date, getLongDateFormat()).toISOString();
                    offerDate.val(date);
                }

                form.submit();
            }
        });
    </script>
}
